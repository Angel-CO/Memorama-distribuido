„(
PC:\Users\jhoni\Documents\Memorama Proyecto\Memorama-Host\Contratos\IContratos.cs
	namespace 	
	Contratos
 
{ 
[ 
ServiceContract 
( 
CallbackContract %
=& '
typeof( .
(. /
IContratosCallBack/ A
)A B
)B C
]C D
public 

	interface 

IContratos 
{ 
[ 	
OperationContract	 
( 
IsOneWay #
=$ %
true& *
)* +
]+ ,
void 
Login 
( 
Usuario 
usuario "
)" #
;# $
[ 	
OperationContract	 
( 
IsOneWay #
=$ %
true& *
)* +
]+ ,
void 
RegistrarUsuario 
( 
Usuario %
usuario& -
)- .
;. /
[ 	
OperationContract	 
( 
IsOneWay #
=$ %
true& *
)* +
]+ ,
void 
ValidarRegistro 
( 
Usuario $
usuario% ,
,, -
string. 4
codigoVerificacion5 G
)G H
;H I
[ 	
OperationContract	 
( 
IsOneWay #
=$ %
true& *
)* +
]+ ,
void 
EnviarMensaje 
( 
string !
destino" )
,) *
string+ 1
mensaje2 9
)9 :
;: ;
[ 	
OperationContract	 
( 
IsOneWay #
=$ %
true& *
)* +
]+ ,
void  
AgregarUsuariosLobby !
(! "
Usuario" )
usuario* 1
)1 2
;2 3
[ 	
OperationContract	 
( 
IsOneWay #
=$ %
true& *
)* +
]+ ,
void   
RankingUsuarios   
(   
)   
;   
["" 	
OperationContract""	 
("" 
IsOneWay"" #
=""$ %
true""& *
)""* +
]""+ ,
void## 
Empezarjuego## 
(## 
)## 
;## 
[%% 	
OperationContract%%	 
(%% 
IsOneWay%% #
=%%$ %
true%%& *
)%%* +
]%%+ ,
void&& 
HacerMovimiento&& 
(&& 
int&&  
primeraCarta&&! -
,&&- .
int&&/ 2
segundaCarta&&3 ?
)&&? @
;&&@ A
[(( 	
OperationContract((	 
((( 
IsOneWay(( #
=(($ %
true((& *
)((* +
]((+ ,
void)) 

PasarCarta)) 
()) 
int)) 
id)) 
))) 
;))  
[++ 	
OperationContract++	 
(++ 
IsOneWay++ #
=++$ %
true++& *
)++* +
]+++ ,
void,, 
LogOutLobby,, 
(,, 
String,, 
usuario,,  '
),,' (
;,,( )
[.. 	
OperationContract..	 
(.. 
IsOneWay.. #
=..$ %
true..& *
)..* +
]..+ ,
void// 
AgregarPuntuacion// 
(// 
String// %
usuario//& -
,//- .
int/// 2
puntaje//3 :
)//: ;
;//; <
[11 	
OperationContract11	 
(11 
IsOneWay11 #
=11$ %
true11& *
)11* +
]11+ ,
void22 (
BuscarParaCambiarContrase√±a22 (
(22( )
string22) /
usuario220 7
,227 8
string229 ?
correo22@ F
)22F G
;22G H
[55 	
OperationContract55	 
(55 
IsOneWay55 #
=55$ %
true55& *
)55* +
]55+ ,
void66 
CambiarContrase√±a66 
(66 
string66 %
contrase√±a66& 0
,660 1
string662 8
usuario669 @
)66@ A
;66A B
[88 	
OperationContract88	 
(88 
IsOneWay88 #
=88$ %
true88& *
)88* +
]88+ ,
void99 $
validarCodigoContrase√±a99 $
(99$ %
string99% +
codigo99, 2
,992 3
string993 9
usuario99: A
)99A B
;99B C
[<< 	
OperationContract<<	 
(<< 
IsOneWay<< #
=<<$ %
true<<& *
)<<* +
]<<+ ,
void== 
verificarReportes== 
(== 
string== %
usuario==& -
)==- .
;==. /
[DD 	
OperationContractDD	 
(DD 
IsOneWayDD #
=DD$ %
trueDD& *
)DD* +
]DD+ ,
voidEE 
CartaEquivocadaEE 
(EE 
)EE 
;EE 
}FF 
}GG õ*
XC:\Users\jhoni\Documents\Memorama Proyecto\Memorama-Host\Contratos\IContratosCallBack.cs
	namespace 	
	Contratos
 
{ 
public 

	interface 
IContratosCallBack '
{ 
[ 	
OperationContract	 
( 
IsOneWay #
=$ %
true& *
)* +
]+ ,
void 
GetLoginResult 
( 
LoginResults (
	resultado) 2
)2 3
;3 4
[ 	
OperationContract	 
( 
IsOneWay #
=$ %
true& *
)* +
]+ ,
void  
GetRegistroResultado !
(! "
ResultadosRegistro" 4
	resultado5 >
)> ?
;? @
[ 	
OperationContract	 
( 
IsOneWay #
=$ %
true& *
)* +
]+ ,
void "
GetValidacionResultado #
(# $
ResultadoValidacion$ 7
	resultado8 A
)A B
;B C
[ 	
OperationContract	 
( 
IsOneWay #
=$ %
true& *
)* +
]+ ,
void 
GetUsuariosOnline 
( 
List #
<# $
string$ *
>* +
usuariosConectados, >
)> ?
;? @
[ 	
OperationContract	 
( 
IsOneWay #
=$ %
true& *
)* +
]+ ,
void 
RecibirMensajes 
( 
string #
source$ *
,* +
string, 2
message3 :
): ;
;; <
[ 	
OperationContract	 
( 
IsOneWay #
=$ %
true& *
)* +
]+ ,
void 

GetRanking 
( 
List 
< 
UsuarioRanking +
>+ ,
ranking- 4
)4 5
;5 6
[!! 	
OperationContract!!	 
(!! 
IsOneWay!! #
=!!$ %
true!!& *
)!!* +
]!!+ ,
void"" 
GetCarta"" 
("" 
int"" 
posicion"" "
)""" #
;""# $
[%% 	
OperationContract%%	 
(%% 
IsOneWay%% #
=%%$ %
true%%& *
)%%* +
]%%+ ,
void&& 
GetJuego&& 
(&& 
int&& 
numero&&  
)&&  !
;&&! "
[(( 	
OperationContract((	 
((( 
IsOneWay(( #
=(($ %
true((& *
)((* +
]((+ ,
void)) 
GetMovimiento)) 
()) 
Boolean)) "
bandera))# *
,))* +
int)), /
primeraCarta))0 <
,))< =
int))> A
segundaCarta))B N
)))N O
;))O P
[,, 	
OperationContract,,	 
(,, 
IsOneWay,, #
=,,$ %
true,,& *
),,* +
],,+ ,
void--  
GetResultadoBusqueda-- !
(--! "
string--" (
usuario--) 0
)--0 1
;--1 2
[// 	
OperationContract//	 
(// 
IsOneWay// #
=//$ %
true//& *
)//* +
]//+ ,
void00 
NoExisteUsuario00 
(00 
)00 
;00 
[22 	
OperationContract22	 
(22 
IsOneWay22 #
=22$ %
true22& *
)22* +
]22+ ,
void33 
correoEquivocado33 
(33 
)33 
;33  
[55 	
OperationContract55	 
(55 
IsOneWay55 #
=55$ %
true55& *
)55* +
]55+ ,
void66 (
NosepudocambiarLaContrase√±a66 (
(66( )
)66) *
;66* +
[99 	
OperationContract99	 
(99 
IsOneWay99 #
=99$ %
true99& *
)99* +
]99+ ,
void:: 
UsuarioEncontrado:: 
(:: 
string:: %
usuario::& -
)::- .
;::. /
[<< 	
OperationContract<<	 
(<< 
IsOneWay<< #
=<<$ %
true<<& *
)<<* +
]<<+ ,
void== 
CodigoValidado== 
(== 
string== "
usuario==# *
)==* +
;==+ ,
[?? 	
OperationContract??	 
(?? 
IsOneWay?? #
=??$ %
true??& *
)??* +
]??+ ,
void@@ 
Contrase√±aCambiada@@ 
(@@  
)@@  !
;@@! "
[BB 	
OperationContractBB	 
(BB 
IsOneWayBB #
=BB$ %
trueBB& *
)BB* +
]BB+ ,
voidCC 
EstadoReporteCC 
(CC 
)CC 
;CC 
[II 	
OperationContractII	 
(II 
IsOneWayII #
=II$ %
trueII& *
)II* +
]II+ ,
voidJJ 
GetTurnoJJ 
(JJ 
boolJJ 
turnoJJ  
)JJ  !
;JJ! "
}LL 
}MM Ÿ
RC:\Users\jhoni\Documents\Memorama Proyecto\Memorama-Host\Contratos\LoginResults.cs
	namespace 	
	Contratos
 
{ 
public 

enum 
LoginResults 
{ !
Contrase√±aIncorrecta 
= 
$num  
,  !
NoExisteUrsuario		 
=		 
$num		 
,		 
UsuarioEncontrado

 
=

 
$num

 
} 
} à
]C:\Users\jhoni\Documents\Memorama Proyecto\Memorama-Host\Contratos\Properties\AssemblyInfo.cs
[ 
assembly 	
:	 

AssemblyTitle 
( 
$str $
)$ %
]% &
[		 
assembly		 	
:			 

AssemblyDescription		 
(		 
$str		 !
)		! "
]		" #
[

 
assembly

 	
:

	 
!
AssemblyConfiguration

  
(

  !
$str

! #
)

# $
]

$ %
[ 
assembly 	
:	 

AssemblyCompany 
( 
$str 
) 
] 
[ 
assembly 	
:	 

AssemblyProduct 
( 
$str &
)& '
]' (
[ 
assembly 	
:	 

AssemblyCopyright 
( 
$str 0
)0 1
]1 2
[ 
assembly 	
:	 

AssemblyTrademark 
( 
$str 
)  
]  !
[ 
assembly 	
:	 

AssemblyCulture 
( 
$str 
) 
] 
[ 
assembly 	
:	 


ComVisible 
( 
false 
) 
] 
[ 
assembly 	
:	 

Guid 
( 
$str 6
)6 7
]7 8
[## 
assembly## 	
:##	 

AssemblyVersion## 
(## 
$str## $
)##$ %
]##% &
[$$ 
assembly$$ 	
:$$	 

AssemblyFileVersion$$ 
($$ 
$str$$ (
)$$( )
]$$) *¿-
VC:\Users\jhoni\Documents\Memorama Proyecto\Memorama-Host\Contratos\PruebasServicios.cs
	namespace 	
	Contratos
 
{ 
public 

class 
PruebasServicios !
{ 
public 
LoginResults 
Login "
(" #
string# )
username* 2
,2 3
string4 :
password; C
)C D
{ 	
using 
( 
MemoramaDBEntities %
db& (
=) *
new+ .
MemoramaDBEntities/ A
(A B
)B C
)C D
{ 
var 
usu 
= 
db 
. 
Usuario $
.$ %
Where% *
(* +
(+ ,
x, -
)- .
=>/ 1
x2 3
.3 4
Nickname4 <
=== ?
username@ H
)H I
.I J
FirstOrDefaultJ X
(X Y
)Y Z
;Z [
if 
( 
usu 
!= 
null 
)  
{ 
if 
( 
usu 
. 
Password $
.$ %
Equals% +
(+ ,
password, 4
)4 5
)5 6
{ 
return 
LoginResults +
.+ ,
UsuarioEncontrado, =
;= >
} 
else 
{ 
return 
LoginResults +
.+ ,!
Contrase√±aIncorrecta, @
;@ A
} 
} 
else 
{ 
return 
LoginResults '
.' (
NoExisteUrsuario( 8
;8 9
} 
}   
}"" 	
public&& 
ResultadosRegistro&& !
RegistrarUsuario&&" 2
(&&2 3
string&&3 9
correo&&: @
,&&@ A
string&&A G
nickname&&H P
,&&P Q
string&&R X
password&&Y a
,&&a b
string&&c i
estadoverificar&&j y
,&&y z
string	&&z Ä"
codigodeverificacion
&&Å ï
)
&&ï ñ
{'' 	
using(( 
((( 
MemoramaDBEntities(( %
db((& (
=(() *
new((+ .
MemoramaDBEntities((/ A
(((A B
)((B C
)((C D
{)) 
Random** 
random** 
=** 
new**  #
Random**$ *
(*** +
)**+ ,
;**, -
Usuario.. 
us.. 
=.. 
new..  
Usuario..! (
(..( )
)..) *
;..* +
us// 
.// 
Correo// 
=// 
correo// "
;//" #
us00 
.00 
Nickname00 
=00 
nickname00 &
;00& '
us11 
.11 
Password11 
=11 
password11 &
;11& '
us66 
.66 
EstadoVerificacion66 %
=66& '
estadoverificar66( 7
;667 8
us77 
.77 
CodigoVerificacion77 %
=77& ' 
codigodeverificacion77( <
;77< =
try99 
{:: 
db;; 
.;; 
Usuario;; 
.;; 
Add;; "
(;;" #
us;;# %
);;% &
;;;& '
db<< 
.<< 
SaveChanges<< "
(<<" #
)<<# $
;<<$ %
return>> 
ResultadosRegistro>> -
.>>- .
RegistradoConExito>>. @
;>>@ A
}AA 
catchBB 
(BB 
	ExceptionBB  
)BB  !
{CC 
returnEE 
ResultadosRegistroEE -
.EE- . 
NoEsPosibleRegistrarEE. B
;EEB C
}FF 
}HH 
}KK 	
publicNN 
ResultadoValidacionNN "
ValidarRegistroNN# 2
(NN2 3
stringNN3 9
usuarioNN: A
,NNA B
stringNNC I
codigoVerificacionNNJ \
)NN\ ]
{OO 	
usingPP 
(PP 
MemoramaDBEntitiesPP %
dbPP& (
=PP) *
newPP+ .
MemoramaDBEntitiesPP/ A
(PPA B
)PPB C
)PPC D
{QQ 
varRR 
usuRR 
=RR 
dbRR 
.RR 
UsuarioRR $
.RR$ %
WhereRR% *
(RR* +
(RR+ ,
xRR, -
)RR- .
=>RR/ 1
xRR2 3
.RR3 4
NicknameRR4 <
==RR= ?
usuarioRR@ G
)RRG H
.RRH I
FirstOrDefaultRRI W
(RRW X
)RRX Y
;RRY Z
ifSS 
(SS 
usuSS 
!=SS 
nullSS 
)SS  
{TT 
ifUU 
(UU 
usuUU 
.UU 
CodigoVerificacionUU .
.UU. /
EqualsUU/ 5
(UU5 6
codigoVerificacionUU6 H
)UUH I
)UUI J
{VV 
usuWW 
.WW 
EstadoVerificacionWW .
=WW/ 0
$strWW1 =
;WW= >
dbXX 
.XX 
SaveChangesXX &
(XX& '
)XX' (
;XX( )
returnYY 
ResultadoValidacionYY 1
.YY1 2
CodigoCorrectoYY2 @
;YY@ A
}ZZ 
else[[ 
{\\ 
return]] 
ResultadoValidacion]] 2
.]]2 3
CodigoIncorrecto]]3 C
;]]C D
}^^ 
}__ 
}`` 
returnaa 
ResultadoValidacionaa &
.aa& '"
NoseEncuentraElUsuarioaa' =
;aa= >
}bb 	
}ee 
}ff ó
XC:\Users\jhoni\Documents\Memorama Proyecto\Memorama-Host\Contratos\ResultadosRegistro.cs
	namespace 	
	Contratos
 
{ 
public 

enum 
ResultadosRegistro "
{ 
RegistradoConExito		 
=		 
$num		 
,		  
NoEsPosibleRegistrar

 
=

 
$num

  
} 
} Â
YC:\Users\jhoni\Documents\Memorama Proyecto\Memorama-Host\Contratos\ResultadoValidacion.cs
	namespace 	
	Contratos
 
{ 
public 

enum 
ResultadoValidacion #
{ 
CodigoCorrecto 
= 
$num 
, 
CodigoIncorrecto		 
=		 
$num		 
,		 "
NoseEncuentraElUsuario

 
=

  
$num

  !
} 
} Ä†
OC:\Users\jhoni\Documents\Memorama Proyecto\Memorama-Host\Contratos\Servicios.cs
	namespace 	
	Contratos
 
{ 
[ 
ServiceBehavior 
( 
InstanceContextMode (
=) *
InstanceContextMode+ >
.> ?
Single? E
,E F
ConcurrencyModeG V
=W X
ConcurrencyModeY h
.h i
Singlei o
)o p
]p q
public		 

class		 
	Servicios		 
:		 

IContratos		 '
{

 
private 
List 
< 
int 
> 
globalTablero '
=( )
new* -
List. 2
<2 3
int3 6
>6 7
(7 8
)8 9
{: ;
$num< =
,= >
$num? @
,@ A
$numB C
,C D
$numE F
,F G
$numH I
,I J
$numK L
,L M
$numN O
,O P
$numQ R
,R S
$numT U
,U V
$numW X
,X Y
$numZ [
,[ \
$num] ^
}_ `
;` a
private 
List 
< 
int 
> 
tablero !
=" #
new$ '
List( ,
<, -
int- 0
>0 1
(1 2
)2 3
;3 4
private 

Dictionary 
< 
IContratosCallBack -
,- .
string/ 5
>5 6
usuariosConectados7 I
=J K
newL O

DictionaryP Z
<Z [
IContratosCallBack[ m
,m n
stringo u
>u v
(v w
)w x
;x y
private 
List 
< 
string 
> 
usuariosMensaje ,
=- .
new/ 2
List3 7
<7 8
string8 >
>> ?
(? @
)@ A
;A B
private 
IContratosCallBack "
personaEnTurno# 1
;1 2
public 
void 
Login 
( 
Usuario !
usuario" )
)) *
{ 	
using 
( 
MemoramaDBEntities %
db& (
=) *
new+ .
MemoramaDBEntities/ A
(B C
)C D
)D E
{ 
var 
usu 
= 
db 
. 
Usuario $
.$ %
Where% *
(* +
(+ ,
x, -
)- .
=>/ 1
x2 3
.3 4
Nickname4 <
=== ?
usuario@ G
.G H
NicknameH P
)P Q
.Q R
FirstOrDefaultR `
(` a
)a b
;b c
if 
( 
usu 
!= 
null 
)  
{ 
if 
( 
usu 
. 
Password $
.$ %
Equals% +
(+ ,
usuario, 3
.3 4
Password4 <
)< =
)= >
{ 
Callback!!  
.!!  !
GetLoginResult!!! /
(!!/ 0
LoginResults!!0 <
.!!< =
UsuarioEncontrado!!= N
)!!N O
;!!O P
}"" 
else## 
{$$ 
Callback%%  
.%%  !
GetLoginResult%%! /
(%%/ 0
LoginResults%%0 <
.%%< =!
Contrase√±aIncorrecta%%= Q
)%%Q R
;%%R S
}&& 
}'' 
else(( 
{)) 
Callback** 
.** 
GetLoginResult** +
(**+ ,
LoginResults**, 8
.**8 9
NoExisteUrsuario**9 I
)**I J
;**J K
}++ 
},, 
}.. 	
public00 
void00 
RegistrarUsuario00 $
(00$ %
Usuario00% ,
usuario00- 4
)004 5
{11 	
using22 
(22 
MemoramaDBEntities22 %
db22& (
=22) *
new22+ .
MemoramaDBEntities22/ A
(22A B
)22B C
)22C D
{33 
Random44 
random44 
=44 
new44  #
Random44$ *
(44* +
)44+ ,
;44, -
int55 
codigoVerificacion55 &
=55' (
random55) /
.55/ 0
Next550 4
(554 5
$num555 ;
,55; <
$num55= D
)55D E
;55E F
Usuario88 
us88 
=88 
new88  
Usuario88! (
(88( )
)88) *
;88* +
us99 
.99 
Correo99 
=99 
usuario99 #
.99# $
Correo99$ *
;99* +
us:: 
.:: 
Nickname:: 
=:: 
usuario:: %
.::% &
Nickname::& .
;::. /
us;; 
.;; 
Password;; 
=;; 
usuario;; %
.;;% &
Password;;& .
;;;. /
usuario?? 
.?? 
CodigoVerificacion?? *
=??+ ,
codigoVerificacion??- ?
.??? @
ToString??@ H
(??H I
)??I J
;??J K
usuario@@ 
.@@ 
EstadoVerificacion@@ *
=@@+ ,
$str@@- <
;@@< =
usAA 
.AA 
EstadoVerificacionAA %
=AA& '
usuarioAA( /
.AA/ 0
EstadoVerificacionAA0 B
;AAB C
usBB 
.BB 
CodigoVerificacionBB %
=BB& '
usuarioBB( /
.BB/ 0
CodigoVerificacionBB0 B
;BBB C
tryDD 
{EE 
dbFF 
.FF 
UsuarioFF 
.FF 
AddFF "
(FF" #
usFF# %
)FF% &
;FF& '
dbGG 
.GG 
SaveChangesGG "
(GG" #
)GG# $
;GG$ %
CallbackII 
.II  
GetRegistroResultadoII 1
(II1 2
ResultadosRegistroII2 D
.IID E
RegistradoConExitoIIE W
)IIW X
;IIX Y
enviarCorreoJJ  
(JJ  !
usuarioJJ! (
.JJ( )
CorreoJJ) /
,JJ/ 0
codigoVerificacionJJ1 C
)JJC D
;JJD E
}LL 
catchMM 
(MM 
	ExceptionMM  
)MM  !
{MM! "
CallbackOO 
.OO  
GetRegistroResultadoOO 1
(OO1 2
ResultadosRegistroOO2 D
.OOD E 
NoEsPosibleRegistrarOOE Y
)OOY Z
;OOZ [
}PP 
}TT 
}UU 	
publicWW 
voidWW 
ValidarRegistroWW #
(WW# $
UsuarioWW$ +
usuarioWW, 3
,WW3 4
stringWW5 ;
codigoVerificacionWW< N
)WWN O
{XX 	
usingYY 
(YY 
MemoramaDBEntitiesYY %
dbYY& (
=YY) *
newYY+ .
MemoramaDBEntitiesYY/ A
(YYA B
)YYB C
)YYC D
{ZZ 
var[[ 
usu[[ 
=[[ 
db[[ 
.[[ 
Usuario[[ $
.[[$ %
Where[[% *
([[* +
([[+ ,
x[[, -
)[[- .
=>[[/ 1
x[[2 3
.[[3 4
Nickname[[4 <
==[[= ?
usuario[[@ G
.[[G H
Nickname[[H P
)[[P Q
.[[Q R
FirstOrDefault[[R `
([[` a
)[[a b
;[[b c
if\\ 
(\\ 
usu\\ 
!=\\ 
null\\ 
)\\ 
{]] 
if^^ 
(^^ 
usu^^ 
.^^ 
CodigoVerificacion^^ .
.^^. /
Equals^^/ 5
(^^5 6
codigoVerificacion^^6 H
)^^H I
)^^I J
{__ 
usu`` 
.`` 
EstadoVerificacion`` .
=``/ 0
$str``1 =
;``= >
dbaa 
.aa 
SaveChangesaa &
(aa& '
)aa' (
;aa( )
Callbackbb  
.bb  !"
GetValidacionResultadobb! 7
(bb7 8
ResultadoValidacionbb8 K
.bbK L
CodigoCorrectobbL Z
)bbZ [
;bb[ \
}cc 
elsedd 
{ee 
Callbackff  
.ff  !"
GetValidacionResultadoff! 7
(ff7 8
ResultadoValidacionff8 K
.ffK L
CodigoIncorrectoffL \
)ff\ ]
;ff] ^
}gg 
}hh 
}ii 
}jj 	
IContratosCallBackll 
Callbackll #
{mm 	
getnn 
{oo 
returnpp 
OperationContextpp '
.pp' (
Currentpp( /
.pp/ 0
GetCallbackChannelpp0 B
<ppB C
IContratosCallBackppC U
>ppU V
(ppV W
)ppW X
;ppX Y
}qq 
}rr 	
privatett 
voidtt 
enviarCorreott !
(tt! "
stringtt" (
destinatariott) 5
,tt5 6
inttt7 :
codigoVerificaciontt; M
)ttM N
{uu 	
Systemvv 
.vv 
Netvv 
.vv 
Mailvv 
.vv 
MailMessagevv '
msjvv( +
=vv, -
newvv. 1
Systemvv2 8
.vv8 9
Netvv9 <
.vv< =
Mailvv= A
.vvA B
MailMessagevvB M
(vvM N
)vvN O
;vvO P
msjxx 
.xx 
Toxx 
.xx 
Addxx 
(xx 
destinatarioxx #
)xx# $
;xx$ %
msjyy 
.yy 
Subjectyy 
=yy 
$stryy >
;yy> ?
msjzz 
.zz 
SubjectEncodingzz 
=zz  !
Systemzz" (
.zz( )
Textzz) -
.zz- .
Encodingzz. 6
.zz6 7
UTF8zz7 ;
;zz; <
msj{{ 
.{{ 
Body{{ 
={{ 
$str{{ 1
+{{2 3
codigoVerificacion{{4 F
+{{G H
$str{{I L
;{{L M
msj|| 
.|| 
BodyEncoding|| 
=|| 
System|| %
.||% &
Text||& *
.||* +
Encoding||+ 3
.||3 4
UTF8||4 8
;||8 9
msj}} 
.}} 

IsBodyHtml}} 
=}} 
true}} !
;}}! "
msj~~ 
.~~ 
From~~ 
=~~ 
new~~ 
System~~ !
.~~! "
Net~~" %
.~~% &
Mail~~& *
.~~* +
MailAddress~~+ 6
(~~6 7
$str~~7 M
)~~M N
;~~N O
System
ÄÄ 
.
ÄÄ 
Net
ÄÄ 
.
ÄÄ 
Mail
ÄÄ 
.
ÄÄ 

SmtpClient
ÄÄ &
cliente
ÄÄ' .
=
ÄÄ/ 0
new
ÄÄ1 4
System
ÄÄ5 ;
.
ÄÄ; <
Net
ÄÄ< ?
.
ÄÄ? @
Mail
ÄÄ@ D
.
ÄÄD E

SmtpClient
ÄÄE O
(
ÄÄO P
)
ÄÄP Q
;
ÄÄQ R
cliente
ÇÇ 
.
ÇÇ 
Credentials
ÇÇ 
=
ÇÇ  !
new
ÇÇ" %
System
ÇÇ& ,
.
ÇÇ, -
Net
ÇÇ- 0
.
ÇÇ0 1
NetworkCredential
ÇÇ1 B
(
ÇÇB C
$str
ÇÇC Y
,
ÇÇY Z
$str
ÇÇ[ i
)
ÇÇi j
;
ÇÇj k
cliente
ÉÉ 
.
ÉÉ 
Port
ÉÉ 
=
ÉÉ 
$num
ÉÉ 
;
ÉÉ 
cliente
ÑÑ 
.
ÑÑ 
	EnableSsl
ÑÑ 
=
ÑÑ 
true
ÑÑ  $
;
ÑÑ$ %
cliente
ÖÖ 
.
ÖÖ 
Host
ÖÖ 
=
ÖÖ 
$str
ÖÖ +
;
ÖÖ+ ,
try
áá 
{
àà 
cliente
ââ 
.
ââ 
Send
ââ 
(
ââ 
msj
ââ  
)
ââ  !
;
ââ! "
Console
ää 
.
ää 
	WriteLine
ää !
(
ää! "
$str
ää" 5
,
ää5 6
destinatario
ää7 C
)
ääC D
;
ääD E
}
ãã 
catch
åå 
(
åå 
	Exception
åå 
e
åå 
)
åå 
{
çç 
Console
éé 
.
éé 
	WriteLine
éé !
(
éé! "
e
éé" #
.
éé# $
Message
éé$ +
)
éé+ ,
;
éé, -
}
èè 
}
ëë 	
public
ïï 
void
ïï "
AgregarUsuariosLobby
ïï (
(
ïï( )
Usuario
ïï) 0
usuario
ïï1 8
)
ïï8 9
{
ññ 	
Boolean
óó 
existe
óó 
=
óó 
false
óó "
;
óó" #
foreach
öö 
(
öö 
var
öö 
usuarioC
öö !
in
öö" $ 
usuariosConectados
öö% 7
)
öö7 8
{
õõ 
if
úú 
(
úú 
usuario
úú 
.
úú 
Nickname
úú $
.
úú$ %
Equals
úú% +
(
úú+ ,
usuarioC
úú, 4
.
úú4 5
Value
úú5 :
)
úú: ;
)
úú; <
{
ùù 
existe
ûû 
=
ûû 
true
ûû !
;
ûû! "
break
üü 
;
üü 
}
¢¢ 
}
¶¶ 
if
ßß 
(
ßß 
!
ßß 
existe
ßß 
)
ßß 
{
®®  
usuariosConectados
©© "
.
©©" #
Add
©©# &
(
©©& '
Callback
©©' /
,
©©/ 0
usuario
©©1 8
.
©©8 9
Nickname
©©9 A
)
©©A B
;
©©B C
usuariosMensaje
™™ 
.
™™  
Add
™™  #
(
™™# $
usuario
™™$ +
.
™™+ ,
Nickname
™™, 4
)
™™4 5
;
™™5 6%
NotificarDeNuevoUsuario
´´ '
(
´´' (
)
´´( )
;
´´) *
}
¨¨ 
else
≠≠ 
{
ÆÆ %
NotificarDeNuevoUsuario
ØØ '
(
ØØ' (
)
ØØ( )
;
ØØ) *
}
±± 
}
¥¥ 	
private
∂∂ 
void
∂∂ %
NotificarDeNuevoUsuario
∂∂ ,
(
∂∂, -
)
∂∂- .
{
∑∑ 	
Callback
∫∫ 
.
∫∫ 
GetUsuariosOnline
∫∫ *
(
∫∫* +
usuariosMensaje
∫∫+ :
)
∫∫: ;
;
∫∫; <
}
ºº 	
public
øø 
void
øø 
EnviarMensaje
øø !
(
øø! "
string
øø" (
destino
øø) 0
,
øø0 1
string
øø2 8
mensaje
øø9 @
)
øø@ A
{
¿¿ 	
foreach
¡¡ 
(
¡¡ 
var
¡¡ 
usuario
¡¡  
in
¡¡! # 
usuariosConectados
¡¡$ 6
)
¡¡6 7
{
¬¬ 
if
√√ 
(
√√ 
usuario
√√ 
.
√√ 
Value
√√ !
.
√√! "
Equals
√√" (
(
√√( )
destino
√√) 0
)
√√0 1
)
√√1 2
{
ƒƒ 
usuario
≈≈ 
.
≈≈ 
Key
≈≈ 
.
≈≈  
RecibirMensajes
≈≈  /
(
≈≈/ 0
GetSourceUser
≈≈0 =
(
≈≈= >
)
≈≈> ?
,
≈≈? @
mensaje
≈≈A H
)
≈≈H I
;
≈≈I J
}
∆∆ 
}
«« 
}
»» 	
private
   
string
   
GetSourceUser
   $
(
  $ %
)
  % &
{
ÀÀ 	
string
ÃÃ 

sourceUser
ÃÃ 
=
ÃÃ 
$str
ÃÃ  "
;
ÃÃ" #
foreach
ŒŒ 
(
ŒŒ 
var
ŒŒ 
usuario
ŒŒ  
in
ŒŒ! # 
usuariosConectados
ŒŒ$ 6
)
ŒŒ6 7
{
œœ 
if
–– 
(
–– 
usuario
–– 
.
–– 
Key
–– 
==
––  "
Callback
––# +
)
––+ ,
{
—— 

sourceUser
““ 
=
““  
usuario
““! (
.
““( )
Value
““) .
;
““. /
}
”” 
}
’’ 
return
◊◊ 

sourceUser
◊◊ 
;
◊◊ 
}
ÿÿ 	
public
⁄⁄ 
void
⁄⁄ 
RankingUsuarios
⁄⁄ #
(
⁄⁄# $
)
⁄⁄$ %
{
€€ 	
using
‹‹ 
(
‹‹  
MemoramaDBEntities
‹‹ %
db
‹‹& (
=
‹‹) *
new
‹‹+ . 
MemoramaDBEntities
‹‹/ A
(
‹‹A B
)
‹‹B C
)
‹‹C D
{
›› 
List
ﬁﬁ 
<
ﬁﬁ 
UsuarioRanking
ﬁﬁ #
>
ﬁﬁ# $
ranking
ﬁﬁ% ,
=
ﬁﬁ- .
new
ﬁﬁ/ 2
List
ﬁﬁ3 7
<
ﬁﬁ7 8
UsuarioRanking
ﬁﬁ8 F
>
ﬁﬁF G
(
ﬁﬁG H
)
ﬁﬁH I
;
ﬁﬁI J
var
ﬂﬂ 
usuarios
ﬂﬂ 
=
ﬂﬂ 
db
ﬂﬂ !
.
ﬂﬂ! "
Usuario
ﬂﬂ" )
.
ﬂﬂ) *
Where
ﬂﬂ* /
(
ﬂﬂ/ 0
p
ﬂﬂ0 1
=>
ﬂﬂ2 4
p
ﬂﬂ5 6
.
ﬂﬂ6 7
PuntajeTotal
ﬂﬂ7 C
!=
ﬂﬂD F
null
ﬂﬂG K
)
ﬂﬂK L
.
ﬂﬂL M
OrderByDescending
ﬂﬂM ^
(
ﬂﬂ^ _
x
ﬂﬂ_ `
=>
ﬂﬂa c
x
ﬂﬂd e
.
ﬂﬂe f
PuntajeTotal
ﬂﬂf r
)
ﬂﬂr s
;
ﬂﬂs t
foreach
·· 
(
·· 
var
·· 
usu
··  
in
··! #
usuarios
··$ ,
)
··, -
{
‚‚ 
UsuarioRanking
„„ "
usuarioRanking
„„# 1
=
„„2 3
new
„„4 7
UsuarioRanking
„„8 F
(
„„F G
)
„„G H
;
„„H I
usuarioRanking
‰‰ "
.
‰‰" #
Nickname
‰‰# +
=
‰‰, -
usu
‰‰. 1
.
‰‰1 2
Nickname
‰‰2 :
;
‰‰: ;
usuarioRanking
ÂÂ "
.
ÂÂ" #

Puntuacion
ÂÂ# -
=
ÂÂ. /
(
ÂÂ0 1
int
ÂÂ1 4
)
ÂÂ4 5
usu
ÂÂ5 8
.
ÂÂ8 9
PuntajeTotal
ÂÂ9 E
;
ÂÂE F
ranking
ÁÁ 
.
ÁÁ 
Add
ÁÁ 
(
ÁÁ  
usuarioRanking
ÁÁ  .
)
ÁÁ. /
;
ÁÁ/ 0
}
ËË 
Callback
ÈÈ 
.
ÈÈ 

GetRanking
ÈÈ #
(
ÈÈ# $
ranking
ÈÈ$ +
)
ÈÈ+ ,
;
ÈÈ, -
}
ÎÎ 
}
ÏÏ 	
public
ÚÚ 
List
ÚÚ 
<
ÚÚ 
int
ÚÚ 
>
ÚÚ 
GenerarTablero
ÚÚ '
(
ÚÚ' (
Random
ÚÚ( .
random
ÚÚ/ 5
)
ÚÚ5 6
{
ÛÛ 	
tablero
ÙÙ 
=
ÙÙ 
globalTablero
ÙÙ #
;
ÙÙ# $
int
ıı 
n
ıı 
=
ıı 
tablero
ıı 
.
ıı 
Count
ıı !
;
ıı! "
while
ˆˆ 
(
ˆˆ 
n
ˆˆ 
>
ˆˆ 
$num
ˆˆ 
)
ˆˆ 
{
˜˜ 
n
¯¯ 
--
¯¯ 
;
¯¯ 
int
˘˘ 
k
˘˘ 
=
˘˘ 
random
˘˘ 
.
˘˘ 
Next
˘˘ #
(
˘˘# $
n
˘˘$ %
+
˘˘& '
$num
˘˘( )
)
˘˘) *
;
˘˘* +
int
˙˙ 
value
˙˙ 
=
˙˙ 
tablero
˙˙ #
[
˙˙# $
k
˙˙$ %
]
˙˙% &
;
˙˙& '
tablero
˚˚ 
[
˚˚ 
k
˚˚ 
]
˚˚ 
=
˚˚ 
tablero
˚˚ $
[
˚˚$ %
n
˚˚% &
]
˚˚& '
;
˚˚' (
tablero
¸¸ 
[
¸¸ 
n
¸¸ 
]
¸¸ 
=
¸¸ 
value
¸¸ "
;
¸¸" #
}
˝˝ 
return
˛˛ 
tablero
˛˛ 
;
˛˛ 
}
ˇˇ 	
public
ÉÉ 
void
ÉÉ 
HacerMovimiento
ÉÉ #
(
ÉÉ# $
int
ÉÉ$ '
primeraCarta
ÉÉ( 4
,
ÉÉ4 5
int
ÉÉ6 9
segundaCarta
ÉÉ: F
)
ÉÉF G
{
ÑÑ 	
if
ÖÖ 
(
ÖÖ 
tablero
ÖÖ 
[
ÖÖ 
primeraCarta
ÖÖ $
]
ÖÖ$ %
==
ÖÖ& (
tablero
ÖÖ) 0
[
ÖÖ0 1
segundaCarta
ÖÖ1 =
]
ÖÖ= >
)
ÖÖ> ?
{
ÜÜ 
foreach
áá 
(
áá 
var
áá 
cliente
áá $
in
áá% ' 
usuariosConectados
áá( :
)
áá: ;
{
àà 
Callback
ââ 
.
ââ 
GetMovimiento
ââ *
(
ââ* +
true
ââ+ /
,
ââ/ 0
primeraCarta
ââ1 =
,
ââ= >
segundaCarta
ââ? K
)
ââK L
;
ââL M
}
ää 
}
ãã 
else
åå 
{
çç 
foreach
éé 
(
éé 
var
éé 
cliente
éé $
in
éé% ' 
usuariosConectados
éé( :
)
éé: ;
{
èè 
Callback
êê 
.
êê 
GetMovimiento
êê *
(
êê* +
false
êê+ 0
,
êê0 1
primeraCarta
êê2 >
,
êê> ?
segundaCarta
êê@ L
)
êêL M
;
êêM N
}
ëë 
}
íí 
}
ìì 	
public
òò 
void
òò 

PasarCarta
òò 
(
òò 
int
òò "
posicion
òò# +
)
òò+ ,
{
ôô 	
foreach
úú 
(
úú 
var
úú 
cliente
úú  
in
úú! # 
usuariosConectados
úú$ 6
)
úú6 7
{
ùù 
cliente
ûû 
.
ûû 
Key
ûû 
.
ûû 
GetCarta
ûû $
(
ûû$ %
posicion
ûû% -
)
ûû- .
;
ûû. /
}
üü 
}
†† 	
public
££ 
void
££ 
CartaEquivocada
££ #
(
££# $
)
££$ %
{
§§ 	
bool
•• 
flag
•• 
=
•• 
true
•• 
;
•• 
bool
¶¶ 
passed
¶¶ 
=
¶¶ 
false
¶¶ 
;
¶¶  
foreach
ßß 
(
ßß 
var
ßß 
cliente
ßß  
in
ßß! # 
usuariosConectados
ßß$ 6
)
ßß6 7
{
®® 
if
©© 
(
©© 
personaEnTurno
©© "
==
©©# % 
usuariosConectados
©©& 8
.
©©8 9
Last
©©9 =
(
©©= >
)
©©> ?
.
©©? @
Key
©©@ C
&&
©©D F
flag
©©G K
)
©©K L
{
™™ 
cliente
´´ 
.
´´ 
Key
´´ 
.
´´  
GetTurno
´´  (
(
´´( )
true
´´) -
)
´´- .
;
´´. /
personaEnTurno
¨¨ "
=
¨¨# $
cliente
¨¨% ,
.
¨¨, -
Key
¨¨- 0
;
¨¨0 1
flag
≠≠ 
=
≠≠ 
false
≠≠  
;
≠≠  !
}
ÆÆ 
else
ØØ 
if
ØØ 
(
ØØ 
cliente
ØØ  
.
ØØ  !
Key
ØØ! $
==
ØØ% '
personaEnTurno
ØØ( 6
)
ØØ6 7
{
∞∞ 
cliente
±± 
.
±± 
Key
±± 
.
±±  
GetTurno
±±  (
(
±±( )
false
±±) .
)
±±. /
;
±±/ 0
passed
≤≤ 
=
≤≤ 
true
≤≤ !
;
≤≤! "
}
≥≥ 
else
¥¥ 
if
¥¥ 
(
¥¥ 
passed
¥¥ 
)
¥¥  
{
µµ 
cliente
∂∂ 
.
∂∂ 
Key
∂∂ 
.
∂∂  
GetTurno
∂∂  (
(
∂∂( )
true
∂∂) -
)
∂∂- .
;
∂∂. /
personaEnTurno
∑∑ "
=
∑∑# $
cliente
∑∑% ,
.
∑∑, -
Key
∑∑- 0
;
∑∑0 1
passed
∏∏ 
=
∏∏ 
false
∏∏ "
;
∏∏" #
}
ππ 
else
∫∫ 
{
ªª 
cliente
ºº 
.
ºº 
Key
ºº 
.
ºº  
GetTurno
ºº  (
(
ºº( )
false
ºº) .
)
ºº. /
;
ºº/ 0
}
ΩΩ 
}
øø 
}
¿¿ 	
public
∆∆ 
void
∆∆ 
LogOutLobby
∆∆ 
(
∆∆  
String
∆∆  &
usuario
∆∆' .
)
∆∆. /
{
«« 	
foreach
»» 
(
»» 
var
»» 
usuarioC
»» !
in
»»" $ 
usuariosConectados
»»% 7
)
»»7 8
{
…… 
if
ÀÀ 
(
ÀÀ 
usuarioC
ÀÀ 
.
ÀÀ 
Value
ÀÀ "
.
ÀÀ" #
Equals
ÀÀ# )
(
ÀÀ) *
usuario
ÀÀ* 1
)
ÀÀ1 2
)
ÀÀ2 3
{
ÃÃ  
usuariosConectados
ÕÕ &
.
ÕÕ& '
Remove
ÕÕ' -
(
ÕÕ- .
usuarioC
ÕÕ. 6
.
ÕÕ6 7
Key
ÕÕ7 :
)
ÕÕ: ;
;
ÕÕ; <
usuariosMensaje
ŒŒ #
.
ŒŒ# $
Remove
ŒŒ$ *
(
ŒŒ* +
usuario
ŒŒ+ 2
)
ŒŒ2 3
;
ŒŒ3 4
break
œœ 
;
œœ 
}
—— 
}
’’ %
NotificarDeNuevoUsuario
÷÷ #
(
÷÷# $
)
÷÷$ %
;
÷÷% &
}
ÿÿ 	
public
⁄⁄ 
void
⁄⁄ 
AgregarPuntuacion
⁄⁄ %
(
⁄⁄% &
string
⁄⁄& ,
usuario
⁄⁄- 4
,
⁄⁄4 5
int
⁄⁄6 9
puntaje
⁄⁄: A
)
⁄⁄A B
{
€€ 	
using
›› 
(
››  
MemoramaDBEntities
›› %
db
››& (
=
››) *
new
››+ . 
MemoramaDBEntities
››/ A
(
››A B
)
››B C
)
››C D
{
ﬁﬁ 
var
ﬂﬂ 
usuarioEditar
ﬂﬂ !
=
ﬂﬂ" #
db
ﬂﬂ$ &
.
ﬂﬂ& '
Usuario
ﬂﬂ' .
.
ﬂﬂ. /
FirstOrDefault
ﬂﬂ/ =
(
ﬂﬂ= >
x
ﬂﬂ> ?
=>
ﬂﬂ@ B
x
ﬂﬂC D
.
ﬂﬂD E
Nickname
ﬂﬂE M
==
ﬂﬂN P
usuario
ﬂﬂQ X
)
ﬂﬂX Y
;
ﬂﬂY Z
usuarioEditar
‡‡ 
.
‡‡ 
PuntajeTotal
‡‡ *
=
‡‡+ ,
puntaje
‡‡- 4
;
‡‡4 5
db
·· 
.
·· 
SaveChanges
·· 
(
·· 
)
··  
;
··  !
}
ÊÊ 
}
ËË 	
public
ÍÍ 
void
ÍÍ *
BuscarParaCambiarContrase√±a
ÍÍ /
(
ÍÍ/ 0
string
ÍÍ0 6
usuario
ÍÍ7 >
,
ÍÍ> ?
string
ÍÍ@ F
correo
ÍÍG M
)
ÍÍM N
{
ÎÎ 	
using
ÏÏ 
(
ÏÏ  
MemoramaDBEntities
ÏÏ %
db
ÏÏ& (
=
ÏÏ) *
new
ÏÏ+ . 
MemoramaDBEntities
ÏÏ/ A
(
ÏÏA B
)
ÏÏB C
)
ÏÏC D
{
ÌÌ 
var
ÔÔ 
usuarioabuscar
ÔÔ "
=
ÔÔ# $
db
ÔÔ% '
.
ÔÔ' (
Usuario
ÔÔ( /
.
ÔÔ/ 0
FirstOrDefault
ÔÔ0 >
(
ÔÔ> ?
x
ÔÔ? @
=>
ÔÔA C
x
ÔÔD E
.
ÔÔE F
Nickname
ÔÔF N
==
ÔÔO Q
usuario
ÔÔR Y
)
ÔÔY Z
;
ÔÔZ [
if
 
(
 
usuarioabuscar
 %
!=
& (
null
) -
)
- .
{
ÒÒ 
if
ÚÚ 
(
ÚÚ 
usuarioabuscar
ÚÚ &
.
ÚÚ& '
Correo
ÚÚ' -
.
ÚÚ- .
Equals
ÚÚ. 4
(
ÚÚ4 5
correo
ÚÚ5 ;
)
ÚÚ; <
)
ÚÚ< =
{
ÛÛ 
Random
ÙÙ 
random
ÙÙ %
=
ÙÙ& '
new
ÙÙ( +
Random
ÙÙ, 2
(
ÙÙ2 3
)
ÙÙ3 4
;
ÙÙ4 5
int
ıı  
codigoVerificacion
ıı .
=
ıı/ 0
random
ıı1 7
.
ıı7 8
Next
ıı8 <
(
ıı< =
$num
ıı= C
,
ııC D
$num
ııE L
)
ııL M
;
ııM N
usuarioabuscar
ˆˆ &
.
ˆˆ& ' 
CodigoVerificacion
ˆˆ' 9
=
ˆˆ: ; 
codigoVerificacion
ˆˆ< N
.
ˆˆN O
ToString
ˆˆO W
(
ˆˆW X
)
ˆˆX Y
;
ˆˆY Z
db
˜˜ 
.
˜˜ 
SaveChanges
˜˜ &
(
˜˜& '
)
˜˜' (
;
˜˜( )
enviarCorreo
¯¯ $
(
¯¯$ %
correo
¯¯% +
,
¯¯+ , 
codigoVerificacion
¯¯- ?
)
¯¯? @
;
¯¯@ A
Callback
˙˙  
.
˙˙  !"
GetResultadoBusqueda
˙˙! 5
(
˙˙5 6
usuarioabuscar
˙˙6 D
.
˙˙D E
Nickname
˙˙E M
)
˙˙M N
;
˙˙N O
}
¸¸ 
else
˝˝ 
{
˛˛ 
Callback
ˇˇ  
.
ˇˇ  !
correoEquivocado
ˇˇ! 1
(
ˇˇ1 2
)
ˇˇ2 3
;
ˇˇ3 4
}
ÄÄ 
}
ÇÇ 
else
ÉÉ 
{
ÑÑ 
Callback
ÖÖ 
.
ÖÖ 
NoExisteUsuario
ÖÖ ,
(
ÖÖ, -
)
ÖÖ- .
;
ÖÖ. /
}
ÜÜ 
}
ãã 
}
åå 	
public
íí 
void
íí  
CambiarContrase√±a
íí %
(
íí% &
string
íí& ,
contrase√±a
íí- 7
,
íí7 8
string
íí8 >
usuario
íí? F
)
ííF G
{
ìì 	
using
îî 
(
îî  
MemoramaDBEntities
îî %
db
îî& (
=
îî) *
new
îî+ . 
MemoramaDBEntities
îî/ A
(
îîA B
)
îîB C
)
îîC D
{
ïï 
var
ññ 
usuarioEditar
ññ !
=
ññ" #
db
ññ$ &
.
ññ& '
Usuario
ññ' .
.
ññ. /
FirstOrDefault
ññ/ =
(
ññ= >
x
ññ> ?
=>
ññ@ B
x
ññC D
.
ññD E
Nickname
ññE M
==
ññN P
usuario
ññQ X
)
ññX Y
;
ññY Z
usuarioEditar
ôô !
.
ôô! "
Password
ôô" *
=
ôô+ ,
contrase√±a
ôô- 7
;
ôô7 8
try
üü 
{
†† 
db
°° 
.
°° 
SaveChanges
°° "
(
°°" #
)
°°# $
;
°°$ %
Callback
¢¢ 
.
¢¢ !
Contrase√±aCambiada
¢¢ /
(
¢¢/ 0
)
¢¢0 1
;
¢¢1 2
}
££ 
catch
§§ 
{
•• 
Callback
ßß 
.
ßß *
NosepudocambiarLaContrase√±a
ßß 8
(
ßß8 9
)
ßß9 :
;
ßß: ;
}
®® 
}
¨¨ 
}
ÆÆ 	
public
≤≤ 
void
≤≤ &
validarCodigoContrase√±a
≤≤ +
(
≤≤+ ,
string
≤≤, 2
codigo
≤≤3 9
,
≤≤9 :
string
≤≤; A
usuario
≤≤B I
)
≤≤I J
{
≥≥ 	
using
¥¥ 
(
¥¥  
MemoramaDBEntities
¥¥ %
db
¥¥& (
=
¥¥) *
new
¥¥+ . 
MemoramaDBEntities
¥¥/ A
(
¥¥A B
)
¥¥B C
)
¥¥C D
{
µµ 
var
∂∂ 
usuarioabuscar
∂∂ "
=
∂∂# $
db
∂∂% '
.
∂∂' (
Usuario
∂∂( /
.
∂∂/ 0
FirstOrDefault
∂∂0 >
(
∂∂> ?
x
∂∂? @
=>
∂∂A C
x
∂∂D E
.
∂∂E F
Nickname
∂∂F N
==
∂∂O Q
usuario
∂∂R Y
)
∂∂Y Z
;
∂∂Z [
if
∑∑ 
(
∑∑ 
usuarioabuscar
∑∑ "
!=
∑∑# %
null
∑∑& *
)
∑∑* +
{
∏∏ 
if
ππ 
(
ππ 
usuarioabuscar
ππ &
.
ππ& ' 
CodigoVerificacion
ππ' 9
==
ππ: <
codigo
ππ= C
)
ππC D
{
∫∫ 
Callback
ªª  
.
ªª  !
CodigoValidado
ªª! /
(
ªª/ 0
usuario
ªª0 7
)
ªª7 8
;
ªª8 9
}
ºº 
else
ΩΩ 
{
ææ 
Callback
øø  
.
øø  !$
GetValidacionResultado
øø! 7
(
øø7 8!
ResultadoValidacion
øø8 K
.
øøK L
CodigoIncorrecto
øøL \
)
øø\ ]
;
øø] ^
}
¿¿ 
}
√√ 
else
ƒƒ 
{
ƒƒ 
Callback
≈≈ 
.
≈≈ $
GetValidacionResultado
≈≈ 3
(
≈≈3 4!
ResultadoValidacion
≈≈4 G
.
≈≈G H$
NoseEncuentraElUsuario
≈≈H ^
)
≈≈^ _
;
≈≈_ `
}
∆∆ 
}
«« 
}
»» 	
public
   
void
   
verificarReportes
   %
(
  % &
string
  & ,
usuario
  - 4
)
  4 5
{
ÀÀ 	
using
ÃÃ 
(
ÃÃ  
MemoramaDBEntities
ÃÃ %
db
ÃÃ& (
=
ÃÃ) *
new
ÃÃ+ . 
MemoramaDBEntities
ÃÃ/ A
(
ÃÃA B
)
ÃÃB C
)
ÃÃC D
{
ÕÕ 
var
œœ 
usuarioabuscar
œœ "
=
œœ# $
db
œœ% '
.
œœ' (
Usuario
œœ( /
.
œœ/ 0
FirstOrDefault
œœ0 >
(
œœ> ?
x
œœ? @
=>
œœA C
x
œœD E
.
œœE F
Nickname
œœF N
==
œœO Q
usuario
œœR Y
)
œœY Z
;
œœZ [
if
–– 
(
–– 
usuarioabuscar
–– "
!=
––# %
null
––& *
)
––* +
{
—— 
if
““ 
(
““ 
usuarioabuscar
““ &
.
““& '
CantidadReportes
““' 7
==
““8 :
null
““; ?
)
““? @
{
”” 
usuarioabuscar
‘‘ &
.
‘‘& '
CantidadReportes
‘‘' 7
=
‘‘8 9
$num
‘‘: ;
;
‘‘; <
db
’’ 
.
’’ 
SaveChanges
’’ &
(
’’& '
)
’’' (
;
’’( )
Callback
÷÷  
.
÷÷  !
EstadoReporte
÷÷! .
(
÷÷. /
)
÷÷/ 0
;
÷÷0 1
}
ÿÿ 
else
ŸŸ 
{
⁄⁄ 
usuarioabuscar
€€ &
.
€€& '
CantidadReportes
€€' 7
=
€€8 9
usuarioabuscar
€€: H
.
€€H I
CantidadReportes
€€I Y
+
€€Z [
$num
€€\ ]
;
€€] ^
db
‹‹ 
.
‹‹ 
SaveChanges
‹‹ &
(
‹‹& '
)
‹‹' (
;
‹‹( )
Callback
››  
.
››  !
EstadoReporte
››! .
(
››. /
)
››/ 0
;
››0 1
}
ﬂﬂ 
if
„„ 
(
„„ 
usuarioabuscar
„„ &
.
„„& '
CantidadReportes
„„' 7
>=
„„8 :
$num
„„; <
)
„„< =
{
‰‰ 
db
ÂÂ 
.
ÂÂ 
Usuario
ÂÂ "
.
ÂÂ" #
Remove
ÂÂ# )
(
ÂÂ) *
usuarioabuscar
ÂÂ* 8
)
ÂÂ8 9
;
ÂÂ9 :
db
ÊÊ 
.
ÊÊ 
SaveChanges
ÊÊ &
(
ÊÊ& '
)
ÊÊ' (
;
ÊÊ( )
}
ÈÈ 
}
ÍÍ 
else
ÎÎ 
{
ÏÏ 
Callback
ÓÓ 
.
ÓÓ 
NoExisteUsuario
ÓÓ ,
(
ÓÓ, -
)
ÓÓ- .
;
ÓÓ. /
}
ÔÔ 
}
 
}
ÒÒ 	
public
ÛÛ 
void
ÛÛ 
Empezarjuego
ÛÛ  
(
ÛÛ  !
)
ÛÛ! "
{
ÙÙ 	
Random
ıı 
random
ıı 
=
ıı 
new
ıı 
Random
ıı  &
(
ıı& '
)
ıı' (
;
ıı( )
int
ˆˆ 
numero
ˆˆ 
=
ˆˆ 
random
ˆˆ 
.
ˆˆ  
Next
ˆˆ  $
(
ˆˆ$ %
$num
ˆˆ% &
,
ˆˆ& '
$num
ˆˆ( )
)
ˆˆ) *
;
ˆˆ* +
foreach
˘˘ 
(
˘˘ 
var
˘˘ 
cliente
˘˘  
in
˘˘! # 
usuariosConectados
˘˘$ 6
)
˘˘6 7
{
˙˙ 
cliente
˚˚ 
.
˚˚ 
Key
˚˚ 
.
˚˚ 
GetJuego
˚˚ $
(
˚˚$ %
numero
˚˚% +
)
˚˚+ ,
;
˚˚, -
cliente
¸¸ 
.
¸¸ 
Key
¸¸ 
.
¸¸ 
GetTurno
¸¸ $
(
¸¸$ %
false
¸¸% *
)
¸¸* +
;
¸¸+ ,
}
˛˛ 
personaEnTurno
ˇˇ 
=
ˇˇ  
usuariosConectados
ˇˇ /
.
ˇˇ/ 0
First
ˇˇ0 5
(
ˇˇ5 6
)
ˇˇ6 7
.
ˇˇ7 8
Key
ˇˇ8 ;
;
ˇˇ; < 
usuariosConectados
ÄÄ 
.
ÄÄ 
First
ÄÄ $
(
ÄÄ$ %
)
ÄÄ% &
.
ÄÄ& '
Key
ÄÄ' *
.
ÄÄ* +
GetTurno
ÄÄ+ 3
(
ÄÄ3 4
true
ÄÄ4 8
)
ÄÄ8 9
;
ÄÄ9 :
}
ÉÉ 	
}
ÖÖ 
}ÜÜ ¥
TC:\Users\jhoni\Documents\Memorama Proyecto\Memorama-Host\Contratos\UsuarioRanking.cs
	namespace 	
	Contratos
 
{ 
public 

class 
UsuarioRanking 
{ 
public 
string 
Nickname 
{  
get! $
;$ %
set& )
;) *
}+ ,
public		 
int		 

Puntuacion		 
{		 
get		  #
;		# $
set		% (
;		( )
}		* +
}

 
} 